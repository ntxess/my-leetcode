// 1356. Sort Integers by The Number of 1 Bits
// You are given an integer array arr. Sort the integers in the array in ascending order by the number of 
// 1's in their binary representation and in case of two or more integers have the same number of 1's you 
// have to sort them in ascending order.
// Return the array after sorting it.

class Solution {
public:
    vector<int> sortByBits(vector<int>& arr) {
        vector<vector<int>> bucket(33);
        for(auto num : arr) {
            bucket[getNumBits(num)].push_back(num);
        }

        vector<int> ans;
        for(int i = 0; i < bucket.size(); i++) {
            sort(bucket[i].begin(), bucket[i].end());

            for(int j = 0; j < bucket[i].size(); j++) {
                ans.push_back(bucket[i][j]);
            }
        }
        return ans;
    }

    int getNumBits(int num) {
        int count = 0;
        while(num) {
            if(num % 2)
                count++;
            num /= 2;
        }
        return count;
    }
};