// 1370. Increasing Decreasing String
// You are given a string s. Reorder the string using the following algorithm:

// Pick the smallest character from s and append it to the result.
// Pick the smallest character from s which is greater than the last appended character to the result and append it.
// Repeat step 2 until you cannot pick more characters.
// Pick the largest character from s and append it to the result.
// Pick the largest character from s which is smaller than the last appended character to the result and append it.
// Repeat step 5 until you cannot pick more characters.
// Repeat the steps from 1 to 6 until you pick all characters from s.
// In each step, If the smallest or the largest character appears more than once you can choose any occurrence and append it to the result.

// Return the result string after sorting s with this algorithm.

class Solution {
public:
    string sortString(string s) {
        int charmap[26] = {};
        for(auto ch : s)
            charmap[int(ch-'a')]++;
        
        string ans;
        while(s.size() != ans.size()) {
            for(int i = 0; i < 26; i++) {
                if(charmap[i] > 0) {
                    ans.push_back('a' + i);
                    charmap[i]--;
                }
            }
            
            for(int i = 25; i >= 0; i--) {
                if(charmap[i] > 0) {
                    ans.push_back('a' + i);
                    charmap[i]--;
                }
            }
        }
        return ans;
    }
};