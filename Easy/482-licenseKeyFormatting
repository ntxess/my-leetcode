// 482. License Key Formatting
// You are given a license key represented as a string s that consists of only alphanumeric characters and dashes. 
// The string is separated into n + 1 groups by n dashes. You are also given an integer k.
// We want to reformat the string s such that each group contains exactly k characters, except for the 
// first group, which could be shorter than k but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase.

// Return the reformatted license key.
class Solution {
public:
    string licenseKeyFormatting(string s, int k) {
        string key;
        int dashPos = 0;
        for(int i = s.length()-1; i >= 0; i--) {
            if(s[i] != '-') {
                key.insert(key.begin(), toupper(s[i]));
                dashPos++;
                if(dashPos == k) {
                    key.insert(key.begin(), '-');
                    dashPos = 0;
                }
            }
        }
        if(key[0] == '-')
            key.erase(key.begin());
        return key;
    }
};