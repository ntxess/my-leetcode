// 1046. Last Stone Weight
// You are given an array of integers stones where stones[i] is the weight of the ith stone.
// We are playing a game with the stones. On each turn, we choose the heaviest two stones and smash them together. 
// Suppose the heaviest two stones have weights x and y with x <= y. The result of this smash is:
// If x == y, both stones are destroyed, and
// If x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.
// At the end of the game, there is at most one stone left.
// Return the weight of the last remaining stone. If there are no stones left, return 0.

class Solution {
public:
    int lastStoneWeight(vector<int>& stones) {
        sort(stones.begin(), stones.end(), greater<int>());
        
        while(1 < stones.size()) {
            int first = stones[0];
            stones.erase(stones.begin());
            int second = stones[0];
            stones.erase(stones.begin());
            stones.push_back(first - second);
            sort(stones.begin(), stones.end(), greater<int>());
        }
        return stones[0];
    }
};