// 1184. Distance Between Bus Stops
// A bus has n stops numbered from 0 to n - 1 that form a circle. We know the distance between 
// all pairs of neighboring stops where distance[i] is the distance between the stops 
// number i and (i + 1) % n.
// The bus goes along both directions i.e. clockwise and counterclockwise.
// Return the shortest distance between the given start and destination stops.

class Solution {
public:
    int distanceBetweenBusStops(vector<int>& distance, int start, int destination) {
        int cw = start;
        int ccw = start;
        int sumCW = 0;
        int sumCCW = 0;

        while(cw % distance.size() != destination || ccw % distance.size() != destination) {
            if(cw % distance.size() != destination) {
                sumCW += distance[cw % distance.size()];
                cw++;
            }

            if(ccw % distance.size() != destination) {
                int pos = ccw-1;
                if(pos < 0)
                    pos = distance.size()-1;
                sumCCW += distance[pos];
                ccw--;
                if(ccw < 0)
                    ccw = distance.size()-1;
            }
        }
        return min(sumCW, sumCCW);
    }
};