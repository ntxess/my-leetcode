// 234. Palindrome Linked List

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        vector<int> palVect;

        ListNode* traveler = head;
        while(traveler) {
            palVect.push_back(traveler->val);
            traveler = traveler->next;
        }

        for(int i = 0; i < palVect.size() / 2; i++) {
            if(palVect[i] != palVect[palVect.size() - i - 1]) {
                return false;
            }
        }
        return true;
    }
};