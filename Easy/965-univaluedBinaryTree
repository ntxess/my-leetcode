// 965. Univalued Binary Tree
// A binary tree is uni-valued if every node in the tree has the same value.
// Given the root of a binary tree, return true if the given tree is uni-valued, or false otherwise.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isUnivalTree(TreeNode* root) {
        int key = root->val;
        return univalTreeHelper(root, key);
    }

    bool univalTreeHelper(TreeNode* root, int& key) {
        if(!root)
            return true;
        
        if(key != root->val)
            return false;

        if(!univalTreeHelper(root->left, key))
            return false;

        if(!univalTreeHelper(root->right, key))
            return false;

        return true;
    }

};