// 257. Binary Tree Paths
// Given the root of a binary tree, return all root-to-leaf paths in any order.
// A leaf is a node with no children.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    vector<string> ans;

public:
    vector<string> binaryTreePaths(TreeNode* root) {
        helper(root, to_string(root->val));
        return ans;
    }

    void helper(TreeNode* root, string current) {
        if(!root->left && !root->right) {
            ans.push_back(current);
            return;
        }

        if(root->left)
            helper(root->left, current + "->" + to_string(root->left->val));
        
        if(root->right)
            helper(root->right, current + "->" + to_string(root->right->val));
    }
};