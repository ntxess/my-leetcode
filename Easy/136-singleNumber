// 136. Single Number
// Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
// You must implement a solution with a linear runtime complexity and use only constant extra space.

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        unordered_map<int, int> hashTable; 
        for(int i = 0; i < nums.size(); i++)
        {
            if(hashTable.find(nums[i]) == hashTable.end())
                hashTable[nums[i]]++;
            else
                hashTable[nums[i]]--;
        }

        for(auto& [key, val] : hashTable) {
            if(val != 0)
                return key;
        }

        return -1;
    }
};
