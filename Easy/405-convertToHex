// 405. Convert a Number to Hexadecimal
// Given an integer num, return a string representing its hexadecimal representation. For negative integers, twoâ€™s
// complement method is used.
// All the letters in the answer string should be lowercase characters, and there should not be any leading zeros in
// the answer except for the zero itself.
// Note: You are not allowed to use any built-in library method to directly solve this problem.

class Solution {
public:
    string toHex(int num) {
        if(num == 0)
            return "0";

        unordered_map<char, int> map = {
            {0, '0'},
            {1, '1'},
            {2, '2'},
            {3, '3'},
            {4, '4'},
            {5, '5'},
            {6, '6'},
            {7, '7'},
            {8, '8'},
            {9, '9'},
            {10, 'a'},
            {11, 'b'},
            {12, 'c'},
            {13, 'd'},
            {14, 'e'},
            {15, 'f'},
        };

        string ans = "";
        if(num > 0) {
            int currVal = num;
            while(currVal) {
                int hexCode = currVal % 16;
                currVal /= 16;
                ans.insert(ans.begin(), map[hexCode]);
            }
        } else {
            unsigned int negativeVal = num;
            while(negativeVal) {
                int hexCode = negativeVal % 16;
                negativeVal /= 16;
                ans.insert(ans.begin(), map[hexCode]);
            }
        }

        return ans;
    }
};