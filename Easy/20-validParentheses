// 20. Valid Parentheses
// Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
// An input string is valid if:
// Open brackets must be closed by the same type of brackets.
// Open brackets must be closed in the correct order.
// Every close bracket has a corresponding open bracket of the same type.

class Solution {
public:
    bool isValid(string s) {
        stack<char> ans;
        if(s.length() == 1)
            return false;

        for(int i = 0; i < s.length(); i++) {
            if(s[i] == '(' || s[i] == '[' || s[i] == '{') {
                ans.push(s[i]);
            } else {
                if(!ans.empty() && ans.top() == '(' && s[i] == ')') {
                    ans.pop();
                }
                else if(!ans.empty() && ans.top() == '{' && s[i] == '}') {
                    ans.pop();
                }
                else if(!ans.empty() && ans.top() == '[' && s[i] == ']') {
                    ans.pop();
                }
                else
                    return false;
            }
        }
        
        if(ans.empty())
            return true;
        else
            return false;
    }
};