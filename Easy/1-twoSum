// 1. Two Sum 
// Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
// You may assume that each input would have exactly one solution, and you may not use the same element twice.
// You can return the answer in any order.

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        std::unordered_map<int, int> map;
        vector<int> ans;
        
        for(int i = 0; i < nums.size(); i++) {
            if(map.find(nums[i]) != map.end()) {
                ans.push_back(map[nums[i]]);
                ans.push_back(i);
            } else {
                map[target - nums[i]] = i;
            }
        }
        return ans;
    }
};