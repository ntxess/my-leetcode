// 35. Search Insert Position
// Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
// You must write an algorithm with O(log n) runtime complexity.

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int left = 0, right = nums.size()-1, mid;
        while(left <= right) {
            mid =  left + (right - left) / 2;
            if(nums[mid] == target) {
                return mid;
            }
            if(nums[mid] <= target) {
                left = mid + 1;
            }
            if(nums[mid] > target) {
                right = mid - 1;
            }
        }
        
        if(nums[mid] < target) {
            return mid+1;
        } else if(nums[mid] > target) {
            return mid; 
        }
        return -1;
    }
};