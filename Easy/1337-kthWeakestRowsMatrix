// 1337. The K Weakest Rows in a Matrix
// You are given an m x n binary matrix mat of 1's (representing soldiers) and 0's (representing civilians). 
// The soldiers are positioned in front of the civilians. That is, all the 1's will appear to the left of all 
// the 0's in each row.
// A row i is weaker than a row j if one of the following is true:
// The number of soldiers in row i is less than the number of soldiers in row j.
// Both rows have the same number of soldiers and i < j.
// Return the indices of the k weakest rows in the matrix ordered from weakest to strongest.

class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        vector<vector<int>> bucket(mat[0].size()+1);
        for(int i = 0; i < mat.size(); i++) {
            int soldiers = 0;
            for(int j = 0; j < mat[i].size(); j++) {
                if(mat[i][j])
                    soldiers++;
            }
            bucket[soldiers].push_back(i);
        }

        vector<int> ans;
        for(int i = 0; i < bucket.size(); i++) {
            for(int j = 0; j < bucket[i].size(); j++) {
                ans.push_back(bucket[i][j]);
                if(ans.size() == k)
                    return ans;
            }
        }
        return vector<int>();
    }
};