// 1436. Destination City
// You are given the array paths, where paths[i] = [cityAi, cityBi] means there exists a direct path going from cityAi to cityBi. Return the destination city, that is, the city without any path outgoing to another city.
// It is guaranteed that the graph of paths forms a line without any loop, therefore, there will be exactly one destination city.

class Solution {
public:
    string destCity(vector<vector<string>>& paths) {
        unordered_set<string> departure;
        unordered_set<string> destination;

        for(auto path : paths) {
            departure.insert(path[0]);
            destination.insert(path[1]);
        }

        for(auto it = destination.begin(); it != destination.end(); ++it) {
            if(departure.find(*it) == departure.end()) 
                return *it;
        }
        return "";
    }
};