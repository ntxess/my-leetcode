// 2423. Remove Letter To Equalize Frequency
// You are given a 0-indexed string word, consisting of lowercase English letters. You need to select one index and remove the letter 
// at that index from word so that the frequency of every letter present in word is equal.
// Return true if it is possible to remove one letter so that the frequency of all letters in word are equal, and false otherwise.
// Note:
// The frequency of a letter x is the number of times it occurs in the string.
// You must remove exactly one letter and cannot chose to do nothing.

class Solution {
public:
    bool equalFrequency(string word) {
        int n = word.length();
        for(int i = 0; i < n; ++i) {
            string newString = word;
            newString.erase(newString.begin() + i);

            int letters[26] = {0};
            int check = 0;
            for(auto ch : newString) 
                check = ++letters[ch-'a'];
            
            bool allSame = true;
            for(int j = 0; j < 26; ++j) {
                if(letters[j] && letters[j] != check) {
                    allSame = false;
                    break;
                }
            }
            
            if(allSame)
                return true;

        }
        return false;
    }
};