// 1869. Longer Contiguous Segments of Ones than Zeros
// Given a binary string s, return true if the longest contiguous segment of 1's is strictly longer than the longest contiguous 
// segment of 0's in s, or return false otherwise.
// For example, in s = "110100010" the longest continuous segment of 1s has length 2, and the longest continuous segment of 0s 
// has length 3.
// Note that if there are no 0's, then the longest continuous segment of 0's is considered to have a length 0. The same applies 
// if there is no 1's.

class Solution {
public:
    bool checkZeroOnes(string s) {
        int ones = 0;
        int zeros = 0;
        bool zlatch = false;
        bool olatch = false;
        int maxOnes = INT_MIN;
        int maxZeros = INT_MIN;
        for(int i = 0; i < s.length(); ++i) {
            if(olatch && s[i] == '0') {
                ones = 0;
                olatch = false;
            }

            if(zlatch && s[i] == '1') {
                zeros = 0;
                zlatch = false;
            }

            if(s[i] == '1') {
                olatch = true;
                ++ones;
                maxOnes = max(maxOnes, ones);
            } 
            
            if(s[i] == '0') {
                zlatch = true;
                ++zeros;
                maxZeros = max(maxZeros, zeros);
            }
        }

        if(maxOnes > maxZeros)
            return true;
        return false;
    }
};