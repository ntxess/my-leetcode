// 1287. Element Appearing More Than 25% In Sorted Array
// Given an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer.

class Solution {
public:
    int findSpecialInteger(vector<int>& arr) {
        int oneForth = arr.size() / 4;
        unordered_map<int, int> map;
        for(auto i : arr) 
            map[i]++;
        
        for(auto i : map)
            if(i.second > oneForth) 
                return i.first;
        return -1;
    }
};


class Solution {
public:
    int findSpecialInteger(vector<int>& arr) {
        int oneForth = arr.size() / 4;
        int count = 1;
        for(int i = 0; i+1 < arr.size(); i++) {
            if(arr[i] != arr[i+1])
                count = 1;
            else
                count++;
            
            if(count > oneForth)
                return arr[i];
        }
        return arr[0];
    }
};