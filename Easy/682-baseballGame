// 682. Baseball Game
// You are keeping the scores for a baseball game with strange rules. At the beginning of the game, you start with an empty record.
// You are given a list of strings operations, where operations[i] is the ith operation you must apply to the record and is one of the following:
// An integer x.
// Record a new score of x.
// '+'.
// Record a new score that is the sum of the previous two scores.
// 'D'.
// Record a new score that is the double of the previous score.
// 'C'.
// Invalidate the previous score, removing it from the record.
// Return the sum of all the scores on the record after applying all the operations.
// The test cases are generated such that the answer and all intermediate calculations fit in a 32-bit integer and that all operations are valid.

class Solution {
public:
    int calPoints(vector<string>& operations) {
        stack<int> scoreboard;
        int total = 0;
        for(int i = 0; i < operations.size(); i++) {
            if(operations[i] == "+") {
                int num1 = scoreboard.top();
                scoreboard.pop();
                int num2 = scoreboard.top();
                int sum = num1 + num2;
                scoreboard.push(num1);
                scoreboard.push(sum);
                total += scoreboard.top();
            } else if(operations[i] == "D") {
                scoreboard.push(scoreboard.top() * 2);
                total += scoreboard.top();
            } else if(operations[i] == "C") {
                total -= scoreboard.top();
                scoreboard.pop();
            } else {
                scoreboard.push(stoi(operations[i]));
                total += scoreboard.top();
            }
        }

        return total;
    }
};