// 143. Reorder List
// You are given the head of a singly linked-list. The list can be represented as:
// L0 → L1 → … → Ln - 1 → Ln
// Reorder the list to be on the following form:
// L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …
// You may not modify the values in the list's nodes. Only nodes themselves may be changed.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        vector<ListNode*> nodes;
        ListNode* ptr = head;
        while(ptr) {
            nodes.push_back(ptr);
            ptr = ptr->next;
        }

        int left = 1;
        int right = nodes.size()-1;
        ListNode* newOrder = head;
        while(left <= right) {
            newOrder->next = nodes[right--];
            newOrder = newOrder->next;
            newOrder->next = nodes[left++];
            newOrder = newOrder->next;
        }
        newOrder->next = NULL;
    }
};

