// 227. Basic Calculator II
// Given a string s which represents an expression, evaluate this expression and return its value. 
// The integer division should truncate toward zero.
// You may assume that the given expression is always valid. All intermediate results will be in the range of [-231, 231 - 1].
// Note: You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval().

class Solution {
public:
    int calculate(string s) {
        char op = '+'; 
        int curr = 0; 
        vector<int> stk; 
        
        for (int i = 0; i < s.size(); ++i) {
            
            if(isdigit(s[i])) 
                curr = curr * 10 + (s[i] - '0'); 
            
            if(i == s.size()-1 || s[i] == '+' || s[i] == '-' || s[i] == '*' || s[i] == '/'){
                if (op == '+') 
                    stk.push_back(curr); 
                else if (op == '-') 
                    stk.push_back(curr * (-1)); 
                else if (op == '*') {
                    int num = stk.back();
                    stk.pop_back();
                    stk.push_back(num * curr);
                }
                else if (op == '/') {
                    int num = stk.back();
                    stk.pop_back();
                    stk.push_back(num / curr); 
                }
                
                curr = 0;
                op = s[i];      
            }
        }
        return accumulate(stk.begin(), stk.end(), 0); 
    }
};