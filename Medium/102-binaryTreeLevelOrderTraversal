// 102. Binary Tree Level Order Traversal
// Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(!root)
            return ans;
        
        queue<TreeNode*> q;
        q.push(root);

        while(!q.empty()) {
            vector<int> level;
            int size = q.size();
            
            for(int i = 0; i < size; i++) {
                TreeNode* current = q.front();
                level.push_back(current->val);
                q.pop();

                if(current->left)
                    q.push(current->left);
                if(current->right)
                    q.push(current->right);
            }
            ans.push_back(level);
        }
        return ans;
    }
};