// 200. Number of Islands
// Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.
// An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume 
// all four edges of the grid are all surrounded by water.

class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int ans = 0;
        for(int i = 0; i < grid.size(); ++i) {
            for(int j = 0; j < grid[i].size(); ++j) {
                if(grid[i][j] == '1') {
                    helper(grid, i, j);
                    ++ans;
                }
            }
        }
        return ans;
    }

    void helper(vector<vector<char>>& grid, int i, int j) {
        grid[i][j] = '.';

        if(i-1 >= 0 && grid[i-1][j] == '1')
            helper(grid, i-1, j);
        
        if(i+1 < grid.size() && grid[i+1][j] == '1')
            helper(grid, i+1, j);

        if(j-1 >= 0 && grid[i][j-1] == '1')
            helper(grid, i, j-1);

        if(j+1 < grid[i].size() && grid[i][j+1] == '1')
            helper(grid, i, j+1);
        
        return;
    }
};